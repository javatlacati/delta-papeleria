/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;


import entidades.Compra;
import entidades.Detallecompra;
import entidades.Producto;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import repositorios.NCompra;
import repositorios.NProducto;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import java.text.DecimalFormat;
import java.util.*;

/**
 * @author Personal
 */
@Component
public class JdNuevaCompra extends javax.swing.JDialog {

    /**
     * Creates new form FrmNuevaCompra
     */
    private final NProducto nProducto;
    private final NCompra nCompra;
    private DefaultComboBoxModel comboModelProducto;
    private DefaultTableModel tableModelCompra;

    @Autowired
    public JdNuevaCompra(NProducto nProducto, NCompra nCompra) {
        this.nProducto = nProducto;
        this.nCompra = nCompra;
        initComponents();
        this.setLocationRelativeTo(null);
        initicializar();
    }

    public JdNuevaCompra(JDialog owner, boolean modal, NProducto nProducto, NCompra nCompra) {
        super(owner, modal);
        this.nProducto = nProducto;
        this.nCompra = nCompra;
        initComponents();
        initicializar();
    }

    private void initicializar() {
//        nProducto = new NProducto();
//        nCompra = new NCompra();
        tableModelCompra = (DefaultTableModel) tablaDetalleCompra.getModel();
        comboModelProducto = (DefaultComboBoxModel) cmbProducto.getModel();
        try {
            List<Producto> lstProducto = nProducto.findAll();
            recargarComboProducto(lstProducto);
        } catch (NullPointerException npe) {
            System.out.println("no hay productos en la BDD");
        }


        // Define the decimal factory.
        DecimalFormat df = new DecimalFormat("#"); // And here..

        NumberFormatter dnff = new NumberFormatter(df);
        DefaultFormatterFactory factory2 = new DefaultFormatterFactory(dnff);
        // Then you set which factory to use.
        txtCantidad.setFormatterFactory(factory2);
        txtCantidad.setValue(1);
        txtCantidad.setText("1");
        tablaDetalleCompra.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);


    }

    private void recargarComboProducto(List<Producto> fuenteDatos) {
        if (fuenteDatos != null) {
            comboModelProducto.removeAllElements();
            for (Iterator<Producto> it = fuenteDatos.iterator(); it.hasNext(); ) {
                Producto producto = it.next();
                comboModelProducto.addElement(producto);
            }
        }

    }

    public Set<Detallecompra> obtenerDatoTablaTemporalCompra() {

        Set<Detallecompra> array = new HashSet<>();
        int cantFilas = tableModelCompra.getRowCount();
        for (int indexFila = 0; indexFila < cantFilas; indexFila++) {
            int codigo = (Integer) tablaDetalleCompra.getValueAt(indexFila, 0);
            int cantidad = (Integer) tablaDetalleCompra.getValueAt(indexFila, 2);
            float precio = (Float) tablaDetalleCompra.getValueAt(indexFila, 3);
            Object dato[] = {codigo, cantidad, precio};
            array.add(new Detallecompra()); //TODO fixme
        }
        return array;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        lblProveedor = new javax.swing.JLabel();
        txtProveedor = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        lblProducto = new javax.swing.JLabel();
        cmbProducto = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        lblCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JFormattedTextField();
        jPanel7 = new javax.swing.JPanel();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JFormattedTextField();
        btnAgregar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        lblReferencia = new javax.swing.JLabel();
        txtReferencia = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDetalleCompra = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblCodigo.setText("Codigo");
        lblCodigo.setPreferredSize(new java.awt.Dimension(100, 14));
        jPanel1.add(lblCodigo);

        txtCodigo.setEditable(false);
        txtCodigo.setPreferredSize(new java.awt.Dimension(150, 25));
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        jPanel1.add(txtCodigo);

        jPanel3.add(jPanel1);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblProveedor.setText("Proveedor");
        lblProveedor.setPreferredSize(new java.awt.Dimension(100, 14));
        jPanel5.add(lblProveedor);

        txtProveedor.setPreferredSize(new java.awt.Dimension(150, 28));
        txtProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedorActionPerformed(evt);
            }
        });
        jPanel5.add(txtProveedor);

        jPanel3.add(jPanel5);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblProducto.setText("Producto");
        lblProducto.setPreferredSize(new java.awt.Dimension(100, 14));
        jPanel11.add(lblProducto);

        cmbProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        cmbProducto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProductoItemStateChanged(evt);
            }
        });
        jPanel11.add(cmbProducto);

        jPanel3.add(jPanel11);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblCantidad.setText("Cantidad");
        lblCantidad.setPreferredSize(new java.awt.Dimension(100, 14));
        jPanel6.add(lblCantidad);

        txtCantidad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtCantidad.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel6.add(txtCantidad);

        jPanel3.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblPrecio.setText("Precio Compra");
        lblPrecio.setPreferredSize(new java.awt.Dimension(100, 14));
        jPanel7.add(lblPrecio);

        txtPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtPrecio.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel7.add(txtPrecio);

        btnAgregar.setText("Agregar");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAgregarMousePressed(evt);
            }
        });
        jPanel7.add(btnAgregar);

        jPanel3.add(jPanel7);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblReferencia.setText("Precio de referencia");
        lblReferencia.setPreferredSize(new java.awt.Dimension(100, 14));
        jPanel10.add(lblReferencia);

        txtReferencia.setEditable(false);
        txtReferencia.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel10.add(txtReferencia);

        btnEliminar.setText("Borrar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEliminarMousePressed(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel10.add(btnEliminar);

        jPanel3.add(jPanel10);

        getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnGuardar.setText("Guardar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnGuardarMousePressed(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel8.add(btnGuardar);

        getContentPane().add(jPanel8, java.awt.BorderLayout.SOUTH);

        tablaDetalleCompra.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Codigo", "Nombre", "Cantidad", "Precio Unitario", "Precio Ref", "Total"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaDetalleCompra);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedorActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMousePressed
        // TODO add your handling code here:

        if (tableModelCompra.getRowCount() < 1) {

            JOptionPane.showMessageDialog(this, "Debes al menos agregar al menus un producto ",
                    "Agregar Producto", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Date date = new Date(System.currentTimeMillis());
        String nombre = txtProveedor.getText();
        Set<Detallecompra> items = obtenerDatoTablaTemporalCompra();
        boolean exito = null == nCompra.save(new Compra(date, nombre, items));

        if (exito) {

            JOptionPane.showMessageDialog(this, "Transaccion Realizada exitosamente ",
                    "Agregar Producto", JOptionPane.INFORMATION_MESSAGE);
            resetear();
            setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Error guardando datos ",
                    "Agregar Producto", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarMousePressed

    private void btnAgregarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMousePressed
        // TODO add your handling code here:
        actualizarValoresFields();
        boolean flag1 = validarSeleccionProducto();
        if (!flag1) {
            return;
        }
        boolean flag2 = validarCantidad();
        if (!flag2) {
            return;
        }
        boolean flag3 = validarPrecio();
        if (!flag3) {
            return;
        }
        Producto producto = (Producto) comboModelProducto.getSelectedItem();
        int codigoProducto = producto.getId();
        String nombreProducto = producto.getNombre();
        Object valueCantidad = txtCantidad.getValue();
        int cantidad = Integer.parseInt(valueCantidad.toString());
        Object valuePrecio = txtPrecio.getValue();
        float precioUnidad = Float.parseFloat(valuePrecio.toString());
        float precioReferencia = 0f;//(Float) producto.getPrecioreferencia();

        agregarItemTablaCompra(codigoProducto, nombreProducto, cantidad, precioUnidad,
                precioReferencia);
    }//GEN-LAST:event_btnAgregarMousePressed

    private void agregarItemTablaCompra(int codigoProducto, String nombreProducto,
                                        int cantidad, float precioUnidad, float precioReferencia) {
        double total = cantidad * precioUnidad;
        boolean verificacion = verificarProductoEntabla(codigoProducto);
        if (verificacion) {
            JOptionPane.showMessageDialog(this, "Este producto ya esta en la "
                    + " tabla");
            return;
        }
        Object data[] = {codigoProducto, nombreProducto, cantidad, precioUnidad,
                precioReferencia, total};
        tableModelCompra.addRow(data);
    }

    private void cmbProductoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProductoItemStateChanged
        // TODO add your handling code here:
        Producto p = (Producto) comboModelProducto.getSelectedItem();
        if (p != null) {

            float precio = 0f;//p.getPrecioreferencia();
            txtReferencia.setText(Float.toString(precio));
            txtPrecio.setValue(precio);
        }
    }//GEN-LAST:event_cmbProductoItemStateChanged

    private void btnEliminarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMousePressed
        // TODO add your handling code here:
        if (tableModelCompra.getRowCount() < 1) {
            return;
        }
        int row = tablaDetalleCompra.getSelectedRow();
        tableModelCompra.removeRow(row);

    }//GEN-LAST:event_btnEliminarMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox cmbProducto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JLabel lblReferencia;
    private javax.swing.JTable tablaDetalleCompra;
    private javax.swing.JFormattedTextField txtCantidad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtPrecio;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtReferencia;
    // End of variables declaration//GEN-END:variables

    private void resetear() {
        /*  throw new UnsupportedOperationException("Not yet implemented");*/
        txtProveedor.setText("");
        while (tableModelCompra.getRowCount() > 0) {
            tableModelCompra.removeRow(tablaDetalleCompra.getRowCount() - 1);
        }
    }

    private boolean validarSeleccionProducto() {
        /*throw new UnsupportedOperationException("Not yet implemented");*/
        Producto p = (Producto) comboModelProducto.getSelectedItem();
        if (p == null) {
            JOptionPane.showMessageDialog(this, "No ha selecionado un producto",
                    "Agregar Producto", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private boolean validarCantidad() {
        Object value = txtCantidad.getValue();
        Integer cantidad = Integer.parseInt(value.toString());
        if (cantidad == null) {
            JOptionPane.showMessageDialog(this, "Debe especificar la cantidad "
                            + " de producto a comprar",
                    "Agregar Producto", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (cantidad < 1) {
            JOptionPane.showMessageDialog(this, "Cantidad debe ser mayor igual a 1",
                    "Agregar Producto", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private void actualizarValoresFields() {
        String strCantidad = txtCantidad.getText();
        try {

            Integer value = Integer.parseInt(strCantidad);
            if (value != null) {
                txtCantidad.setValue(Math.abs(value));
            }
        } catch (Exception e) {

        }
        String strPrecio = txtPrecio.getText();
        try {

            Float value = Float.parseFloat(strPrecio);
            if (value != null) {
                txtPrecio.setValue(Math.abs(value));
            }
        } catch (Exception e) {

        }

    }

    private boolean validarPrecio() {
        Object value = txtCantidad.getValue();
        Float precio = Float.parseFloat(value.toString());
        if (precio == null) {
            JOptionPane.showMessageDialog(this, "Debe especificar la precio"
                            + " del producto  a comprar",
                    "Agregar Producto", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (precio < 1) {
            JOptionPane.showMessageDialog(this, "Precio debe ser mayor igual a 1",
                    "Agregar Producto", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private boolean verificarProductoEntabla(int codigoProducto) {
        int cantidadFilas = tableModelCompra.getRowCount();
        for (int indexFila = 0; indexFila < cantidadFilas; indexFila++) {
            int valor = (Integer) tableModelCompra.getValueAt(indexFila, 0);
            if (valor == codigoProducto)
                return true;
        }
        return false;
    }
}
